#!/bin/bash

# MIT License: Copyright Brandon W Maister <quodlibetor@gmail.com>
# Use this as you wish, keep the fact that I originally wrote it as a
# comment, please.

function usage() {
    echo "Usage:  fix 'PATH'"
    echo "    where PATH is a NotesPlus notebook folder."
}

if [ -z "$1" ] ; then
    usage
    exit 1
fi

notesdir="$1"

logfile=convert.log

if which convert >/dev/null 2>&1 ; then
    use_convert=x
else
    echo "You should install ImageMagick if you want the backgrounds to work"
    echo "http://www.imagemagick.org"
    echo
    echo "This pass is just going to make things work offline"
fi

# main() is invoked after the definition of $css and $js, since they're
# really friggin' long.
function main() {
    # while-find loop technique from http://stackoverflow.com/a/1120952/25616
    while IFS= read -r -d '' file ; do
        dir=$( dirname "$file" )

        sed -e 's|http://new.notesplusapp.com|..|' "$file" >"$dir"/i.html
        # create a backup once and only once!
        if [ ! -f "$dir"/index.html.backup ] ; then
            mv "$dir"/index.html "$dir"/index.html.backup
        fi
        mv "$dir"/i.html "$dir"/index.html

        if [ -z "$use_convert" ] ; then
            continue
        fi

        background="$dir"/resources/background
        if [ -f "${background}.pdf" ] ; then
            echo processing "$dir"
            convert "${background}.pdf" "${background}.png" 2>>"$logfile"
            echo "$iframehtml" > "$dir"/resources/iframe.html
        else
            echo ${background}.pdf does not exist.
            echo If you expected to have a background for those notes, there is a problem.
        fi
    done < <( find "$notesdir" -wholename \*/index.html -print0 )

    staticdir="${notesdir}/static"

    echo "$staticdir"

    [ ! -d "${staticdir}" ] && mkdir -p "${staticdir}"/{js,css}
    echo -n "$css" > "${staticdir}/css/page.css"
    echo -n "$js" > "${staticdir}/js/page.js"
}

css="
body {
    background-image:url('../images/GrayCarbon_BookBackgroundCenter.png');
}

#pageHeader {
    position:absolute;
    left:10px;
    top:10px;
    width:400px;
    height:34px;
    line-height:34px;
    border-radius:5px;

    background-color:#c0c0c0;

    font-family: Arial, Helvetica;
    font-size:16px;
    color:#ffffff;
    padding-left:10px;
}

#pageNumber img {
    border:0px;
}

#pageNumber {
    position:absolute;
    left:278px;
    top:12px;
    width:80px;
    height:30px;
    line-height:30px;
    border-radius:5px;

    background-color:#ffffff;

    font-family: Arial, Helvetica;
    font-size:14px;
    color:#000000;

    padding-left:30px;
    padding-right:30px;

    text-align:center;
}

#prevPageButton {
    position:absolute;
    left:0px;
    top:1px;
    width:28px;
    height:28px;
}

#nextPageButton {
    position:absolute;
    right:0px;
    top:1px;
    width:28px;
    height:28px;
}

#content {
    position:absolute;
    left:10px;
}

#pageBackground, #svg, #pageBorder {
    position:absolute;
    left:0px;
    top:0px;
}

#pageBackground {
    background-color:#ffffff;
}

img.pageBorder {
    position:absolute;
}
"

IFS='\n' read -r -d '' js <<'THISISALONGEOF'
var DIM = {	'contentMarginWidth' : 10,
		'contentMarginHeight' : 10,
		'contentBorderWidth' : 10,
		'contentBorderHeight' : 10,
		'headerHeight': 34
          };

window.onload = function() {
    var innerHTML = '';

    // header
    innerHTML +=
'<div id="pageHeader">' + notebook['name'] + '</div>' +
'<div id="pageNumber">' +
'<a href="' + (page['number'] > 1 ? '../' + (page['number'] - 1) + '/index.html' : '#') + '"><img id="prevPageButton" src="' + staticUrl + '/images/PreviousPageButton.png" /></a>' +
'(' + page['number'] + '/' + notebook['pageCount'] + ')' +
'<a href="' + (page['number'] < notebook['pageCount'] ? '../' + (page['number'] + 1) + '/index.html' : '#') + '"><img id="nextPageButton" src="' + staticUrl + '/images/NextPageButton.png" /></a>' +
'</div>';

    // content
    var top = DIM['headerHeight'] + 2 * DIM['contentMarginHeight'];
    innerHTML +=
'<div id="content" style="width:' + (page['width'] + DIM['contentMarginWidth']) + 'px;height=' + (page['height'] + top) + 'px;top:' + top + 'px;">' +
'<div id="pageBackground" style="width:' + page['width'] + 'px;height:' + page['height'] + 'px;">';

    innerHTML += '</div>'
      + '<object id="svg"  data="page.svg" type="image/svg+xml" width="' + page['width'] + '" height="' + page['height'] + '"></object>';

    // border for page content
    var imgPre = staticUrl + '/images/GrayCarbon_ContentBorder';
    var x1 = w1 = DIM['contentBorderWidth'];
    var x2 = page['width'] - DIM['contentBorderWidth'];
    var w2 = page['width'] - 2 * DIM['contentBorderWidth'];
    var y1 = h1 = DIM['contentBorderHeight'];
    var y2 = page['height'] - DIM['contentBorderHeight'];
    var h2 = page['height'] - 2 * DIM['contentBorderHeight'];
    innerHTML +=
'<div id="pageBorder" style="width:' + page['width'] + 'px;height=' + page['height'] + 'px;">' +
'<img src="' + imgPre + 'TopLeft.png" width="' + w1 + '" height="' + h1 + '" class="pageBorder" style="top:0px;left:0px;" />' +
'<img src="' + imgPre + 'Top.png" width="' + w2 + '" height="' + h1 + '" class="pageBorder" style="top:0px;left:' + x1 + 'px;" />' +
'<img src="' + imgPre + 'TopRight.png" width="' + w1 + '" height="' + h1 + '" class="pageBorder" style="top:0px;left:' + x2 + 'px;" />' +
'<img src="' + imgPre + 'Right.png" width="' + w1 + '" height="' + h2 + '" class="pageBorder" style="top:' + y1 + 'px;left:' + x2 + 'px;" />' +
'<img src="' + imgPre + 'BottomRight.png" width="' + w1 + '" height="' + h1 + '" class="pageBorder" style="top:' + y2 + 'px;left:' + x2 + 'px;" />' +
'<img src="' + imgPre + 'Bottom.png" width="' + w2 + '" height="' + h1 + '" class="pageBorder" style="top:' + y2 + 'px;left:' + x1 + 'px;" />' +
'<img src="' + imgPre + 'BottomLeft.png" width="' + w1 + '" height="' + h1 + '" class="pageBorder" style="top:' + y2 + 'px;left:0px;" />' +
'<img src="' + imgPre + 'Left.png" width="' + w1 + '" height="' + h2 + '" class="pageBorder" style="top:' + y1 + 'px;left:0px;" />' +
'</div>' +
'</div>';

    document.getElementById('wrapper').innerHTML = innerHTML;

    var bgStyle = document.getElementById('pageBackground').style;
    bgStyle.background = "url('resources/background.png') no-repeat center";
    if (typeof bgStyle['backgroundSize'] !== 'undefined') {
        bgStyle.backgroundSize = 'contain';
    }

    var object =  document.getElementById('svg');

    object.addEventListener('load', function(){
        var svg;

        if (object.contentDocument) {
            svg = object.contentDocument;
        }
        else {
            svg = object.getSVGDocument();
        }

        if (svg) {
            var rect = svg.getElementById('id-background-layer')
                .getElementsByTagName('rect')[0];
            rect.style.fillOpacity = 0;
        }
    }, false);
};
THISISALONGEOF

main
